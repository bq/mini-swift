# frozen_string_literal: true

# FILE HELPERS
gitfiles = (git.modified_files + git.added_files).uniq
has_code_changes = !gitfiles.grep(/^Sources/).empty?
has_tests_changes = !gitfiles.grep(/^Tests/).empty?

# bq_helpers.scan_files

# BASIC CHECKS:
warn 'Big PR, try to keep changes smaller if you can üòú' if git.lines_of_code > 500

# BUILD PARSE:
# bq_helpers.build_reports.each do |path|
#  path = Pathname(path)
#  xcode_summary.report path.to_s
# end
#
# #JUNIT PARSE:
# bq_helpers.test_reports.each do |path|
#  path = Pathname(path)
#  junit.parse path.to_s
#  junit.report
#
#  all_test = junit.tests.map(&:attributes)
#  slowest_test = all_test.sort_by { |attributes| attributes[:time].to_f }.last
#  message "‚åõÔ∏è **[#{bq_helpers.read_platform_from_file(path: path)}]** Slowest test: #{slowest_test[:name]} took #{'%.3f' % slowest_test[:time]} seconds"
# end

# SWIFTLINT
swiftlint.config_file = '.swiftlint.yml'
swiftlint.max_num_violations = 20
swiftlint.lint_files
swiftlint.directory = 'Sources'

# TEST EVOLUTION CHECK:
if has_code_changes
  warn('You have changes in code but there is no changes in any test... do you sleep well at night? ü§®') unless has_tests_changes
end
