// MARK: - Empty template base file
{% macro compareVariables variables %}
    {% for variable in variables where variable.name|!contains:"debug" and variable|!static %}
        {% if not variable.annotations.skipEquality %}
        guard {{ variable.name }} == action.{{ variable.name }} else { return false }
        {% else %}
        //TODO: Make {{ variable.typeName }} Equatable.
        {% endif %}
    {% endfor %}
{% endmacro %}

{% for type in types.all where type.name|lowercase|!contains:"test" and type.implements.Action or type.implements.CompletableAction or type.implements.EmptyAction %}

    // sourcery:inline:auto:{{ type.name }}.AutoEquatableAction
    func isEqualTo(_ other: Action) -> Bool {
        {% for variable in type.attributes|!computed|instance %}
        // {{variable.name }}
        {% endfor %}
        {% if type.allVariables|!computed|!static|count == 0 %}
        guard let _ = other as? {{ type.name }} else { return false }
        {% else %}
        guard let action = other as? {{ type.name }} else { return false }
        {% call compareVariables type.allVariables %}
        {% endif %}
        return true
    }
    // sourcery:end
{% endfor %}

